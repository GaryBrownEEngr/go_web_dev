// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	models "github.com/GaryBrownEEngr/twertle_api_dev/backend/models"
	mock "github.com/stretchr/testify/mock"
)

// ArticleStore is an autogenerated mock type for the ArticleStore type
type ArticleStore struct {
	mock.Mock
}

// CreateArticle provides a mock function with given fields: newArticle
func (_m *ArticleStore) CreateArticle(newArticle *models.Article) {
	_m.Called(newArticle)
}

// DeleteArticle provides a mock function with given fields: id
func (_m *ArticleStore) DeleteArticle(id int) {
	_m.Called(id)
}

// GetArticle provides a mock function with given fields: id
func (_m *ArticleStore) GetArticle(id int) *models.Article {
	ret := _m.Called(id)

	var r0 *models.Article
	if rf, ok := ret.Get(0).(func(int) *models.Article); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Article)
		}
	}

	return r0
}

// GetArticles provides a mock function with given fields:
func (_m *ArticleStore) GetArticles() []models.Article {
	ret := _m.Called()

	var r0 []models.Article
	if rf, ok := ret.Get(0).(func() []models.Article); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Article)
		}
	}

	return r0
}

type mockConstructorTestingTNewArticleStore interface {
	mock.TestingT
	Cleanup(func())
}

// NewArticleStore creates a new instance of ArticleStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewArticleStore(t mockConstructorTestingTNewArticleStore) *ArticleStore {
	mock := &ArticleStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
